# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      # Runs a single command using the runners shell
      - name: Start
        run: echo start
        
      - name: Go version
        run: go version

      # Runs a set of commands using the runners shell
      - name: Build
        run: |
          echo "build"
          ls -lh
          cd backend
          ls -lh
          go mod vendor
          GOOS=linux GOARCH=amd64 go build -mod=vendor -tags netgo -ldflags "-s -w" -o mtserver main.go
          ls -lh
          
      - name: Package
        run: |
          echo "Package start"
          cd backend
          ls -lh
          echo "Prepare package folder"
          ls -lh
          mkdir -p ./miniTranscoder/bin
          mkdir -p ./miniTranscoder/www
          echo "Copy files"
          cp -rf mtserver ./miniTranscoder/bin
          chmod +x ./miniTranscoder/bin/mtserver
          ls -lh ./miniTranscoder/bin
          echo "Package"
          tar czvf miniTranscoder.tar.gz miniTranscoder
          ls -lh
          echo "Package done"
      - name: Upload asset to release
        uses: JasonEtco/upload-to-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          args: './backend/miniTranscoder.tar.gz'

